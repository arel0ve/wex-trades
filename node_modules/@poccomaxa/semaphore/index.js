"use strict";
module.exports = Semaphore;

/**
 * @param n {number=1}
 * @constructor
 */
function Semaphore(n) {
    if (n < 1) n = 1;
    var current = 0;
    /** @type {Function[]} */
    var queue = [];

    /** @param callback {Function} */
    function enter(callback) {
        if (callback instanceof Function)
            queue.push(callback);
        next();
    }

    function next() {
        if (current < n && queue.length > 0) {
            current++;
            process.nextTick(queue.shift());
        }
    }

    /**
     * leave after delay
     * @param delay {number=0} milliseconds
     * */
    function leave(delay) {
        current--;
        if (current < 0) current = 0;
        if (!delay || delay < 0)
            next();
        else
            setTimeout(next, delay);
    }

    function stat() {
        return [n, current, queue.length];
    }

    this.enter = enter;
    this.leave = leave;
    this.stat = stat;
}