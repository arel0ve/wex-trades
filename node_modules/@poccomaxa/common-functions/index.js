"use strict";
module.exports = {
    dummyFN: dummyFN,
    array2object: array2object,
    merge: merge,
    safeJSONParse: safeJSONParse,
    handleJSON: handleJSON,
    runFN: runFN,
    matchAll: matchAll
};

function dummyFN() {
}

/**
 * @param array {Array}
 * @return {Object}
 */
function array2object(array) {
    const res = {};
    for (let i = 0, len = array.length; i < len; i++)
        res[i] = array[i];
    return res;
}

/**
 * Соединяет поля и значения из массива объектов в один объект
 * @param arr {Array}
 * @param recursion_level {number=0}
 * @return {Object}
 */
function merge(arr, recursion_level) {
    const result = {};
    if (!recursion_level) recursion_level = 0;
    for (let i = 0, len = arr.length; i < len; i++)
        for (let a in arr[i])
            if (arr[i].hasOwnProperty(a)) {
                let prop = arr[i][a];
                if (prop instanceof Array)
                    prop = array2object(prop);
                if (recursion_level <= 3 &&
                    result[a] !== null &&
                    prop !== null &&
                    typeof prop === "object")
                    result[a] = merge([result[a], prop], recursion_level + 1);
                else
                    result[a] = prop;
            }
    return result;
}

/**
 * @param json {String}
 * @return {Object}
 */
function safeJSONParse(json) {
    let res = false;
    try {
        res = JSON.parse(json);
    } catch (e) {
    }
    return res;
}

/**
 * @param cb {Function.<String, Number, Object, Buffer>}
 * @return {Function}
 */
function handleJSON(cb) {
    return function (res, status) {
        arguments[0] = safeJSONParse(res);
        runFN(cb, ...arguments);
    }
}

function runFN(fn, ...argv) {
    fn instanceof Function && process.nextTick(fn, ...argv);
}

/**
 * @param regex {RegExp}
 * @param string {string}
 * @return {string[][]}
 */
function matchAll(regex, string) {
    let res = [];
    if (regex.global) {
        let match;
        regex.lastIndex = 0;
        while (match = regex.exec(string))
            res.push(match);
    }
    return res;
}